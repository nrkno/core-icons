package no.nrk.core.icons

// Warning: This is an autogenerated file. Please do not edit it manually

data class NrkIcon(
    val normal: Int,
    val expressive: Int
)

object NrkIcons {
	val Nrk360 = NrkIcon(
	    normal = R.drawable.nrk_360,
	    expressive = R.drawable.nrk_360_expressive
	)

	val Nrk404 = NrkIcon(
	    normal = R.drawable.nrk_404,
	    expressive = R.drawable.nrk_404_expressive
	)

	val NrkArrowDown = NrkIcon(
	    normal = R.drawable.nrk_arrow_down,
	    expressive = R.drawable.nrk_arrow_down_expressive
	)

	val NrkArrowDropdown = NrkIcon(
	    normal = R.drawable.nrk_arrow_dropdown,
	    expressive = R.drawable.nrk_arrow_dropdown_expressive
	)

	val NrkArrowLeft = NrkIcon(
	    normal = R.drawable.nrk_arrow_left,
	    expressive = R.drawable.nrk_arrow_left_expressive
	)

	val NrkArrowLeftLong = NrkIcon(
	    normal = R.drawable.nrk_arrow_left_long,
	    expressive = R.drawable.nrk_arrow_left_long_expressive
	)

	val NrkArrowRight = NrkIcon(
	    normal = R.drawable.nrk_arrow_right,
	    expressive = R.drawable.nrk_arrow_right_expressive
	)

	val NrkArrowRightLong = NrkIcon(
	    normal = R.drawable.nrk_arrow_right_long,
	    expressive = R.drawable.nrk_arrow_right_long_expressive
	)

	val NrkArrowUp = NrkIcon(
	    normal = R.drawable.nrk_arrow_up,
	    expressive = R.drawable.nrk_arrow_up_expressive
	)

	val NrkArticle = NrkIcon(
	    normal = R.drawable.nrk_article,
	    expressive = R.drawable.nrk_article_expressive
	)

	val NrkBack = NrkIcon(
	    normal = R.drawable.nrk_back,
	    expressive = R.drawable.nrk_back_expressive
	)

	val NrkBell = NrkIcon(
	    normal = R.drawable.nrk_bell,
	    expressive = R.drawable.nrk_bell_expressive
	)

	val NrkBookmark = NrkIcon(
	    normal = R.drawable.nrk_bookmark,
	    expressive = R.drawable.nrk_bookmark_expressive
	)

	val NrkBroadcast = NrkIcon(
	    normal = R.drawable.nrk_broadcast,
	    expressive = R.drawable.nrk_broadcast_expressive
	)

	val NrkCalendar = NrkIcon(
	    normal = R.drawable.nrk_calendar,
	    expressive = R.drawable.nrk_calendar_expressive
	)

	val NrkCategory = NrkIcon(
	    normal = R.drawable.nrk_category,
	    expressive = R.drawable.nrk_category_expressive
	)

	val NrkCheckbox = NrkIcon(
	    normal = R.drawable.nrk_checkbox,
	    expressive = R.drawable.nrk_checkbox_expressive
	)

	val NrkCheck = NrkIcon(
	    normal = R.drawable.nrk_check,
	    expressive = R.drawable.nrk_check_expressive
	)

	val NrkChevronDown = NrkIcon(
	    normal = R.drawable.nrk_chevron_down,
	    expressive = R.drawable.nrk_chevron_down_expressive
	)

	val NrkChevronLeft = NrkIcon(
	    normal = R.drawable.nrk_chevron_left,
	    expressive = R.drawable.nrk_chevron_left_expressive
	)

	val NrkChevronRight = NrkIcon(
	    normal = R.drawable.nrk_chevron_right,
	    expressive = R.drawable.nrk_chevron_right_expressive
	)

	val NrkChevronUp = NrkIcon(
	    normal = R.drawable.nrk_chevron_up,
	    expressive = R.drawable.nrk_chevron_up_expressive
	)

	val NrkClose = NrkIcon(
	    normal = R.drawable.nrk_close,
	    expressive = R.drawable.nrk_close_expressive
	)

	val NrkComment = NrkIcon(
	    normal = R.drawable.nrk_comment,
	    expressive = R.drawable.nrk_comment_expressive
	)

	val NrkCompleted = NrkIcon(
	    normal = R.drawable.nrk_completed,
	    expressive = R.drawable.nrk_completed_expressive
	)

	val NrkDownloaded = NrkIcon(
	    normal = R.drawable.nrk_downloaded,
	    expressive = R.drawable.nrk_downloaded_expressive
	)

	val NrkDownload = NrkIcon(
	    normal = R.drawable.nrk_download,
	    expressive = R.drawable.nrk_download_expressive
	)

	val NrkDuration = NrkIcon(
	    normal = R.drawable.nrk_duration,
	    expressive = R.drawable.nrk_duration_expressive
	)

	val NrkEllipsis = NrkIcon(
	    normal = R.drawable.nrk_ellipsis,
	    expressive = R.drawable.nrk_ellipsis_expressive
	)

	val NrkFullscreen = NrkIcon(
	    normal = R.drawable.nrk_fullscreen,
	    expressive = R.drawable.nrk_fullscreen_expressive
	)

	val NrkGallery = NrkIcon(
	    normal = R.drawable.nrk_gallery,
	    expressive = R.drawable.nrk_gallery_expressive
	)

	val NrkGeopoint = NrkIcon(
	    normal = R.drawable.nrk_geopoint,
	    expressive = R.drawable.nrk_geopoint_expressive
	)

	val NrkGeo = NrkIcon(
	    normal = R.drawable.nrk_geo,
	    expressive = R.drawable.nrk_geo_expressive
	)

	val NrkGlobe = NrkIcon(
	    normal = R.drawable.nrk_globe,
	    expressive = R.drawable.nrk_globe_expressive
	)

	val NrkHeart = NrkIcon(
	    normal = R.drawable.nrk_heart,
	    expressive = R.drawable.nrk_heart_expressive
	)

	val NrkHelp = NrkIcon(
	    normal = R.drawable.nrk_help,
	    expressive = R.drawable.nrk_help_expressive
	)

	val NrkHome = NrkIcon(
	    normal = R.drawable.nrk_home,
	    expressive = R.drawable.nrk_home_expressive
	)

	val NrkInfo = NrkIcon(
	    normal = R.drawable.nrk_info,
	    expressive = R.drawable.nrk_info_expressive
	)

	val NrkLastestNews = NrkIcon(
	    normal = R.drawable.nrk_lastest_news,
	    expressive = R.drawable.nrk_lastest_news_expressive
	)

	val NrkLink = NrkIcon(
	    normal = R.drawable.nrk_link,
	    expressive = R.drawable.nrk_link_expressive
	)

	val NrkLock = NrkIcon(
	    normal = R.drawable.nrk_lock,
	    expressive = R.drawable.nrk_lock_expressive
	)

	val NrkLongread = NrkIcon(
	    normal = R.drawable.nrk_longread,
	    expressive = R.drawable.nrk_longread_expressive
	)

	val NrkLyn = NrkIcon(
	    normal = R.drawable.nrk_lyn,
	    expressive = R.drawable.nrk_lyn_expressive
	)

	val NrkMat = NrkIcon(
	    normal = R.drawable.nrk_mat,
	    expressive = R.drawable.nrk_mat_expressive
	)

	val NrkMedia404Notfound = NrkIcon(
	    normal = R.drawable.nrk_media_404_notfound,
	    expressive = R.drawable.nrk_media_404_notfound_expressive
	)

	val NrkMediaAirplay = NrkIcon(
	    normal = R.drawable.nrk_media_airplay,
	    expressive = R.drawable.nrk_media_airplay_expressive
	)

	val NrkMediaChromecast = NrkIcon(
	    normal = R.drawable.nrk_media_chromecast,
	    expressive = R.drawable.nrk_media_chromecast_expressive
	)

	val NrkMediaDirektetv = NrkIcon(
	    normal = R.drawable.nrk_media_direktetv,
	    expressive = R.drawable.nrk_media_direktetv_expressive
	)

	val NrkMediaFfw15sec = NrkIcon(
	    normal = R.drawable.nrk_media_ffw_15sec,
	    expressive = R.drawable.nrk_media_ffw_15sec_expressive
	)

	val NrkMediaFfw30sec = NrkIcon(
	    normal = R.drawable.nrk_media_ffw_30sec,
	    expressive = R.drawable.nrk_media_ffw_30sec_expressive
	)

	val NrkMediaFfw = NrkIcon(
	    normal = R.drawable.nrk_media_ffw,
	    expressive = R.drawable.nrk_media_ffw_expressive
	)

	val NrkMediaJumpto = NrkIcon(
	    normal = R.drawable.nrk_media_jumpto,
	    expressive = R.drawable.nrk_media_jumpto_expressive
	)

	val NrkMediaNext = NrkIcon(
	    normal = R.drawable.nrk_media_next,
	    expressive = R.drawable.nrk_media_next_expressive
	)

	val NrkMediaPause = NrkIcon(
	    normal = R.drawable.nrk_media_pause,
	    expressive = R.drawable.nrk_media_pause_expressive
	)

	val NrkMediaPictureInPicture = NrkIcon(
	    normal = R.drawable.nrk_media_picture_in_picture,
	    expressive = R.drawable.nrk_media_picture_in_picture_expressive
	)

	val NrkMediaPlay = NrkIcon(
	    normal = R.drawable.nrk_media_play,
	    expressive = R.drawable.nrk_media_play_expressive
	)

	val NrkMediaPlayFail = NrkIcon(
	    normal = R.drawable.nrk_media_play_fail,
	    expressive = R.drawable.nrk_media_play_fail_expressive
	)

	val NrkMediaPrevious = NrkIcon(
	    normal = R.drawable.nrk_media_previous,
	    expressive = R.drawable.nrk_media_previous_expressive
	)

	val NrkMediaProgramguide = NrkIcon(
	    normal = R.drawable.nrk_media_programguide,
	    expressive = R.drawable.nrk_media_programguide_expressive
	)

	val NrkMediaRwd15sec = NrkIcon(
	    normal = R.drawable.nrk_media_rwd_15sec,
	    expressive = R.drawable.nrk_media_rwd_15sec_expressive
	)

	val NrkMediaRwd30sec = NrkIcon(
	    normal = R.drawable.nrk_media_rwd_30sec,
	    expressive = R.drawable.nrk_media_rwd_30sec_expressive
	)

	val NrkMediaRwd = NrkIcon(
	    normal = R.drawable.nrk_media_rwd,
	    expressive = R.drawable.nrk_media_rwd_expressive
	)

	val NrkMediaSoundwave = NrkIcon(
	    normal = R.drawable.nrk_media_soundwave,
	    expressive = R.drawable.nrk_media_soundwave_expressive
	)

	val NrkMediaStop = NrkIcon(
	    normal = R.drawable.nrk_media_stop,
	    expressive = R.drawable.nrk_media_stop_expressive
	)

	val NrkMediaSubtitles = NrkIcon(
	    normal = R.drawable.nrk_media_subtitles,
	    expressive = R.drawable.nrk_media_subtitles_expressive
	)

	val NrkMediaTheater = NrkIcon(
	    normal = R.drawable.nrk_media_theater,
	    expressive = R.drawable.nrk_media_theater_expressive
	)

	val NrkMediaTilgjengelighetGeoblocked = NrkIcon(
	    normal = R.drawable.nrk_media_tilgjengelighet_geoblocked,
	    expressive = R.drawable.nrk_media_tilgjengelighet_geoblocked_expressive
	)

	val NrkMediaTilgjengelighetIkkelengertilgjengelig = NrkIcon(
	    normal = R.drawable.nrk_media_tilgjengelighet_ikkelengertilgjengelig,
	    expressive = R.drawable.nrk_media_tilgjengelighet_ikkelengertilgjengelig_expressive
	)

	val NrkMediaTilgjengelighetKommer = NrkIcon(
	    normal = R.drawable.nrk_media_tilgjengelighet_kommer,
	    expressive = R.drawable.nrk_media_tilgjengelighet_kommer_expressive
	)

	val NrkMediaTilgjengelighetSnartutilgjengelig = NrkIcon(
	    normal = R.drawable.nrk_media_tilgjengelighet_snartutilgjengelig,
	    expressive = R.drawable.nrk_media_tilgjengelighet_snartutilgjengelig_expressive
	)

	val NrkMening = NrkIcon(
	    normal = R.drawable.nrk_mening,
	    expressive = R.drawable.nrk_mening_expressive
	)

	val NrkMinus = NrkIcon(
	    normal = R.drawable.nrk_minus,
	    expressive = R.drawable.nrk_minus_expressive
	)

	val NrkMore = NrkIcon(
	    normal = R.drawable.nrk_more,
	    expressive = R.drawable.nrk_more_expressive
	)

	val NrkOffline = NrkIcon(
	    normal = R.drawable.nrk_offline,
	    expressive = R.drawable.nrk_offline_expressive
	)

	val NrkOpenInNew = NrkIcon(
	    normal = R.drawable.nrk_open_in_new,
	    expressive = R.drawable.nrk_open_in_new_expressive
	)

	val NrkPerson = NrkIcon(
	    normal = R.drawable.nrk_person,
	    expressive = R.drawable.nrk_person_expressive
	)

	val NrkPlus = NrkIcon(
	    normal = R.drawable.nrk_plus,
	    expressive = R.drawable.nrk_plus_expressive
	)

	val NrkPoll = NrkIcon(
	    normal = R.drawable.nrk_poll,
	    expressive = R.drawable.nrk_poll_expressive
	)

	val NrkReload = NrkIcon(
	    normal = R.drawable.nrk_reload,
	    expressive = R.drawable.nrk_reload_expressive
	)

	val NrkSearch = NrkIcon(
	    normal = R.drawable.nrk_search,
	    expressive = R.drawable.nrk_search_expressive
	)

	val NrkSettings = NrkIcon(
	    normal = R.drawable.nrk_settings,
	    expressive = R.drawable.nrk_settings_expressive
	)

	val NrkSomeEmail = NrkIcon(
	    normal = R.drawable.nrk_some_email,
	    expressive = R.drawable.nrk_some_email_expressive
	)

	val NrkSomeEmbed = NrkIcon(
	    normal = R.drawable.nrk_some_embed,
	    expressive = R.drawable.nrk_some_embed_expressive
	)

	val NrkSomeShare = NrkIcon(
	    normal = R.drawable.nrk_some_share,
	    expressive = R.drawable.nrk_some_share_expressive
	)

	val NrkSomeShareIos = NrkIcon(
	    normal = R.drawable.nrk_some_share_ios,
	    expressive = R.drawable.nrk_some_share_ios_expressive
	)

	val NrkSpinner = NrkIcon(
	    normal = R.drawable.nrk_spinner,
	    expressive = R.drawable.nrk_spinner_expressive
	)

	val NrkStar = NrkIcon(
	    normal = R.drawable.nrk_star,
	    expressive = R.drawable.nrk_star_expressive
	)

	val NrkTilgjengelighet = NrkIcon(
	    normal = R.drawable.nrk_tilgjengelighet,
	    expressive = R.drawable.nrk_tilgjengelighet_expressive
	)

	val NrkTilgjengelighetHorbarhet = NrkIcon(
	    normal = R.drawable.nrk_tilgjengelighet_horbarhet,
	    expressive = R.drawable.nrk_tilgjengelighet_horbarhet_expressive
	)

	val NrkTilgjengelighetLydtekst = NrkIcon(
	    normal = R.drawable.nrk_tilgjengelighet_lydtekst,
	    expressive = R.drawable.nrk_tilgjengelighet_lydtekst_expressive
	)

	val NrkTilgjengelighetSynstolking = NrkIcon(
	    normal = R.drawable.nrk_tilgjengelighet_synstolking,
	    expressive = R.drawable.nrk_tilgjengelighet_synstolking_expressive
	)

	val NrkTilgjengelighetTegnspraak = NrkIcon(
	    normal = R.drawable.nrk_tilgjengelighet_tegnspraak,
	    expressive = R.drawable.nrk_tilgjengelighet_tegnspraak_expressive
	)

	val NrkTrash = NrkIcon(
	    normal = R.drawable.nrk_trash,
	    expressive = R.drawable.nrk_trash_expressive
	)

	val NrkUpload = NrkIcon(
	    normal = R.drawable.nrk_upload,
	    expressive = R.drawable.nrk_upload_expressive
	)

	val NrkUserLoggedin = NrkIcon(
	    normal = R.drawable.nrk_user_loggedin,
	    expressive = R.drawable.nrk_user_loggedin_expressive
	)

	val NrkUserNotloggedin = NrkIcon(
	    normal = R.drawable.nrk_user_notloggedin,
	    expressive = R.drawable.nrk_user_notloggedin_expressive
	)

	val NrkWarning = NrkIcon(
	    normal = R.drawable.nrk_warning,
	    expressive = R.drawable.nrk_warning_expressive
	)
}
